import java.nio.file.Files


plugins {
    id 'ru.vyarus.quality' version '3.1.1'
}
apply plugin: 'java'
apply plugin: "jacoco"
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11
compileJava {
    doFirst {
//        options.compilerArgs = [
//                '--module-path', classpath.asPath
//        ]
    }
}

test.finalizedBy jacocoTestReport
jar {
    enabled = true
    manifest {
        attributes 'Main-Class': 'com.example.front.FrontApplication'
    }
}


repositories {
    maven { url "http://repo.spring.io/libs-release" }
    maven { url "http://repo.spring.io/libs-milestone" }
    maven { url "http://repo.spring.io/libs-snapshot" }
    mavenCentral()
}


ext {
    springCloudVersion = 'Finchley.SR1'
    junitVersion = '5.2.0'
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
    }
}
bootJar {
    mainClassName = 'com.example.client.ClientApplication'
}
jacoco {
    toolVersion = "0.8.2"
}
quality {
    pmd = false
    spotbugs=false
    findbugs=false
    exclude '**/module-info.java' //important! checkstyle cant parse module-info
}
dependencies {

    testCompile "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    compile('org.springframework.boot:spring-boot-starter-web')
    compile 'org.springframework.cloud:spring-cloud-starter-openfeign'


    compile 'org.xmlunit:xmlunit-core:2.6.2'
    compile 'org.xmlunit:xmlunit-legacy:2.6.2'
    compile 'javax.xml.bind:jaxb-api'
    compile 'org.glassfish.jaxb:jaxb-runtime'
    compile 'com.sun.activation:javax.activation'
    compileOnly('org.projectlombok:lombok')

    compile 'org.slf4j:slf4j-api:1.7.25'
    testCompileOnly('org.projectlombok:lombok')
    testCompile 'com.github.tomakehurst:wiremock'
    testCompile 'ru.lanwen.wiremock:wiremock-junit5'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

sourceSets {
    // for java 9+ jigsaw startup
    main {
        output.resourcesDir = "build/classes/java/main"
    }
}
